"""
Django settings for national_household_income_distribution project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import datetime
import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$w2=r*v4bwe(_fkrchg$mt46vjq#w&tz3d20sqdjh#1q9g()7d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export',

    'service',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'incomedistribution.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'incomedistribution.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# # local_default
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

#local test
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'income_distribution',
        'USER': 'root',
        'PASSWORD': 'Wzy19930507',
        'HOST': '127.0.0.1',
        'PORT': '3306'
        #"ATOMIC_REQUESTS": True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Australia/Sydney'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'www')

REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'utils.restful.exception_handler',

    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'TIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DATE_FORMAT': '%Y-%m-%d',
    'DATETIME_INPUT_FORMATS': ['iso-8601', '%Y-%m-%d %H:%M:%S', '%Y-%m-%d'],

    'DEFAULT_RENDERER_CLASSES': (
        'utils.restful.WrapperJSONRender',
        'rest_framework.renderers.JSONRenderer',
    ),
    # JWT configuration--add JSONWebTokenAuthentication
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),

    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    #     'rest_framework.authentication.BasicAuthentication',
    # ),
}

# Additional Settings:
# JWT_AUTH = {
#     # 'JWT_ENCODE_HANDLER': '.auth.jwt_encode_handler',
#     'JWT_RESPONSE_PAYLOAD_HANDLER': '.auth.jwt_response_payload_handler',
#     'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7),
# }

# AUTHENTICATION_BACKENDS=(
#   # add backends into setting
#   '.auth.UserAuthBackend',
# )

# AUTH_USER_MODEL =



# configure log
LOG_DIR = os.path.join(BASE_DIR, 'logs')
if not os.path.isdir(LOG_DIR):
    os.mkdir(LOG_DIR)

LOGGING = {
    "version": 1,
    # True will disable logger
    "disable_existing_loggers": False,
    # Format configuration
    'formatters': {
        'server': {
            'format': '%(asctime)s %(name)s pid:%(process)d %(levelname)s: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        }
    },

    'handlers': {
        'server': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'incomedistribution.log'),
            'maxBytes': 50 * 1024 * 1024,
            'backupCount': 50,
            'encoding': 'utf8',
            'formatter': 'server'
        }
    },
    'loggers': {
        'server': {
            'handlers': ['server'],
            'level': 'INFO'
        },
        "urllib3": {'level': "INFO"},
        "django.db": {"level": "INFO"},
    }
}